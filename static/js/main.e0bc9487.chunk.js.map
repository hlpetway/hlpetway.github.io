{"version":3,"sources":["App.js","index.js"],"names":["GridComponent","_ref","data","React","createElement","Flex","direction","Image","alt","name","color","naturalHeight","height","naturalWidth","width","src","Text","Example","pins","setPins","useState","setWidth","scrollContainerRef","useRef","gridRef","labelId","useId","useEffect","pinList","Array","map","flat","Promise","resolve","getPins","then","startPins","_gridRef$current","current","handleResize","Box","padding","gap","alignItems","Item","Label","htmlFor","id","type","defaultValue","onChange","_ref2","target","Number","value","min","max","step","style","display","margin","tabIndex","ref","el","outline","overflowY","concat","Masonry","columnWidth","gutterWidth","items","layout","minCols","renderItem","_ref3","scrollContainer","document","querySelector","setAttribute","createRoot","getElementById","render","StrictMode","ColorSchemeProvider","colorScheme","fullDimensions","App"],"mappings":"+JA8CA,SAASA,EAAaC,GAAW,IAAVC,KAAEA,GAAMD,EAC7B,OACEE,QAAAC,cAACC,IAAI,CAACC,UAAU,UACdH,QAAAC,cAACG,IAAK,CACJC,IAAKN,EAAKO,KACVC,MAAOR,EAAKQ,MACZC,cAAeT,EAAKU,OACpBC,aAAcX,EAAKY,MACnBC,IAAKb,EAAKa,MAEZZ,QAAAC,cAACY,IAAI,KAAEd,EAAKO,OAKH,SAASQ,IACtB,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BN,EAAOO,GAAYD,mBAAS,KAC7BE,EAAqBC,mBACrBC,EAAUD,mBAEVE,EAAUC,kBAEhBC,oBAAU,MAlEZ,WACE,MAAMT,EAAO,CACX,CACER,MAAO,UACPE,OAAQ,IACRG,IAAK,4BACLD,MAAO,IACPL,KAAM,qDAER,CACEC,MAAO,UACPE,OAAQ,IACRG,IAAK,4BACLD,MAAO,IACPL,KAAM,yFAER,CACEC,MAAO,UACPE,OAAQ,IACRG,IAAK,4BACLD,MAAO,IACPL,KAAM,2CAER,CACEC,MAAO,UACPE,OAAQ,IACRG,IAAK,4BACLD,MAAO,IACPL,KAAM,uEAER,CACEC,MAAO,UACPE,OAAQ,IACRG,IAAK,4BACLD,MAAO,IACPL,KAAM,yFAIJmB,EAAU,IAAI,IAAIC,MAAM,IAAIC,IAAI,IAAM,IAAIZ,IAAOa,OACvD,OAAOC,QAAQC,QAAQL,IA2BrBM,GAAUC,KAAMC,IACdjB,EAAQiB,MAET,IAEHT,oBAAU,SAAAU,EAAA,OAAqB,QAArBA,EAAMb,EAAQc,eAAO,IAAAD,OAAA,EAAfA,EAAiBE,gBAAgB,CAACzB,IAMlD,OACEX,QAAAC,cAACoC,IAAG,CAACC,QAAS,GACZtC,QAAAC,cAACC,IAAI,CAACC,UAAU,SAASoC,IAAK,GAC5BvC,QAAAC,cAACC,IAAI,CAACsC,WAAW,SAASrC,UAAU,UAClCH,QAAAC,cAACC,IAAKuC,KAAI,KACRzC,QAAAC,cAACyC,IAAK,CAACC,QAASrB,GACdtB,QAAAC,cAACY,IAAI,KAAC,qBAGVb,QAAAC,cAAA,SACE2C,GAAItB,EACJuB,KAAK,QACLC,aAAc,IACdC,SAjBUC,IAAgB,IAAfC,OAAEA,GAAQD,EAC7B9B,EAASgC,OAAOD,EAAOE,SAiBfC,IAAK,IACLC,IAAK,IACLC,KAAM,EACNC,MAAO,CAAE5C,MAAO,QAAS6C,QAAS,QAASC,OAAQ,gBAIvDzD,QAAAC,cAAA,OACEyD,SAAU,EACVC,IAAMC,IACJzC,EAAmBgB,QAAUyB,GAE/BL,MAAO,CACL9C,OAAQ,QACRgD,OAAQ,SACRI,QAAS,iBACTC,UAAW,SACXnD,MAAK,GAAAoD,OAAKpD,EAAK,QAGhBQ,EAAmBgB,SAClBnC,QAAAC,cAAC+D,IAAO,CACNC,YAAa,IACbC,YAAa,GACbC,MAAOpD,EACPqD,OAAO,gBACPC,QAAS,EACTV,IAAMA,IACJtC,EAAQc,QAAUwB,GAEpBW,WAAYC,IAAA,IAACxE,KAAEA,GAAMwE,EAAA,OAAKvE,QAAAC,cAACJ,EAAa,CAACE,KAAMA,KAC/CyE,gBAAiBA,IAAMrD,EAAmBgB,aCxH3CsC,SAASC,cAAc,QAC/BC,aAAa,MAAO,OAEZC,qBAAWH,SAASI,eAAe,SAC3CC,OACH9E,IAAAC,cAAC8E,aAAU,KACT/E,IAAAC,cAAC+E,IAAmB,CAACC,YAAY,QAAQC,gBAAc,GACrDlF,IAAAC,cAACoC,IAAG,CAAC9B,MAAM,UAAUE,OAAO,OAAOE,MAAM,QACvCX,IAAAC,cAACkF,EAAG","file":"static/js/main.e0bc9487.chunk.js","sourcesContent":["import { React, useEffect, useId, useRef, useState } from 'react';\nimport { Box, Flex, Image, Label, Masonry, Text } from 'gestalt';\n\nfunction getPins() {\n  const pins = [\n    {\n      color: '#2b3938',\n      height: 563,\n      src: 'https://imgur.com/4a50XsW',\n      width: 474,\n      name: 'An inhabitant of the Alhambra in Grenada, Spain. ',\n    },\n    {\n      color: '#8e7439',\n      height: 563,\n      src: 'https://imgur.com/xdGtNty',\n      width: 474,\n      name: 'Walter takes a nap on the side of the trail to St John Fortress in Kotor, Montenegro.',\n    },\n    {\n      color: '#698157',\n      height: 533,\n      src: 'https://imgur.com/JR2OyG3',\n      width: 474,\n      name: 'A local takes a nap in Porto, Portugal.',\n    },\n    {\n      color: '#4e5d50',\n      height: 625,\n      src: 'https://imgur.com/wSqMAJU',\n      width: 474,\n      name: 'Theo, caretaker of the Henry Miller Museum in Big Sur, California..',\n    },\n    {\n      color: '#6d6368',\n      height: 500,\n      src: 'https://imgur.com/WZLKyyh',\n      width: 474,\n      name: 'A quick photo with Walter on the way down from St John Fortress in Kotor Montenegro.',\n    },\n  ];\n\n  const pinList = [...new Array(3)].map(() => [...pins]).flat();\n  return Promise.resolve(pinList);\n}\n\nfunction GridComponent({ data }) {\n  return (\n    <Flex direction=\"column\">\n      <Image\n        alt={data.name}\n        color={data.color}\n        naturalHeight={data.height}\n        naturalWidth={data.width}\n        src={data.src}\n      />\n      <Text>{data.name}</Text>\n    </Flex>\n  );\n}\n\nexport default function Example() {\n  const [pins, setPins] = useState([]);\n  const [width, setWidth] = useState(700);\n  const scrollContainerRef = useRef();\n  const gridRef = useRef();\n\n  const labelId = useId();\n\n  useEffect(() => {\n    getPins().then((startPins) => {\n      setPins(startPins);\n    });\n  }, []);\n\n  useEffect(() => gridRef.current?.handleResize(), [width]);\n\n  const updateWidth = ({ target }) => {\n    setWidth(Number(target.value));\n  };\n\n  return (\n    <Box padding={2}>\n      <Flex direction=\"column\" gap={4}>\n        <Flex alignItems=\"center\" direction=\"column\">\n          <Flex.Item>\n            <Label htmlFor={labelId}>\n              <Text>Container Width</Text>\n            </Label>\n          </Flex.Item>\n          <input\n            id={labelId}\n            type=\"range\"\n            defaultValue={800}\n            onChange={updateWidth}\n            min={200}\n            max={800}\n            step={5}\n            style={{ width: '400px', display: 'block', margin: '10px auto' }}\n          />\n        </Flex>\n\n        <div\n          tabIndex={0}\n          ref={(el) => {\n            scrollContainerRef.current = el;\n          }}\n          style={{\n            height: '300px',\n            margin: '0 auto',\n            outline: '3px solid #ddd',\n            overflowY: 'scroll',\n            width: `${width}px`,\n          }}\n        >\n          {scrollContainerRef.current && (\n            <Masonry\n              columnWidth={170}\n              gutterWidth={20}\n              items={pins}\n              layout=\"basicCentered\"\n              minCols={1}\n              ref={(ref) => {\n                gridRef.current = ref;\n              }}\n              renderItem={({ data }) => <GridComponent data={data} />}\n              scrollContainer={() => scrollContainerRef.current}\n            />\n          )}\n        </div>\n      </Flex>\n    </Box>\n  );\n}","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./index.css\";\nimport { Box, ColorSchemeProvider } from \"gestalt\";\nimport App from \"./App\";\n\nconst html = document.querySelector(\"html\");\nhtml.setAttribute(\"dir\", \"ltr\");\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <ColorSchemeProvider colorScheme=\"light\" fullDimensions>\n      <Box color=\"default\" height=\"100%\" width=\"100%\">\n        <App />\n      </Box>\n    </ColorSchemeProvider>\n  </StrictMode>\n);"],"sourceRoot":""}